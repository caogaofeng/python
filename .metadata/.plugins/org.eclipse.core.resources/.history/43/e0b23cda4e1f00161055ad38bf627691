# -*-conding:utf-8 -*-
#测试 KDTree
'''
leaf_size:切换到蛮力的点数。改变leaf_size不会影响查询结果，
                          但能显著影响查询和存储所需的存储构造树的速度。
                        需要存储树的规模约n_samples / leaf_size内存量。
                        为指定的leaf_size，叶节点是保证满足leaf_size <= n_points < = 2 * leaf_size，
                        除了在的情况下，n_samples < leaf_size。
                        
metric:用于树的距离度量。默认'minkowski与P = 2（即欧氏度量）。
                  看到一个可用的度量的距离度量类的文档。
       kd_tree.valid_metrics列举这是有效的基础指标。
'''
from sklearn.neighbors import KDTree
import numpy as np
X = np.array([[-1, -1], [-2, -1], [-3, -2], [1, 1], [2, 1], [3, 2]])
kdt = KDTree(X,leaf_size=30,metric="euclidean")
print kdt.query(X, k=3, return_distance=False)


#测试 BallTree
from sklearn.neighbors import BallTree
import numpy as np
X = np.array([[-1, -1], [-2, -1], [-3, -2], [1, 1], [2, 1], [3, 2]])
bt = BallTree(X,leaf_size=30,metric="euclidean")
print bt.query(X, k=3, return_distance=False)
